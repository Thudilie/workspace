name: ci-frontend

on:
  pull_request:
    branches:
      - main
    # paths:
    #   - 'frontend/**'
  workflow_dispatch: # Manual trigger using the workflow_dispatch event

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code from the repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Use Node.js ${{ matrix.node-version }} and run tests
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - working-directory: ./frontend
        run: npm run test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code from the repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Use Node.js ${{ matrix.node-version }} and run lint
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - working-directory: frontend
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Check out the code from the repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }} and run build
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run build
        working-directory: frontend
        run: npm run build

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: frontend
          push: true
          tags: ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
