name: frontend-cd

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch: # Manual trigger using the workflow_dispatch event

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code from the repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Use Node.js ${{ matrix.node-version }} and run tests
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - working-directory: ./frontend
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_FRONTEND }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: frontend
          push: true
          tags: |
            ${{ secrets.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}
            ${{ secrets.ECR_REPOSITORY_FRONTEND }}:latest

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install

      - uses: syntaqx/setup-kustomize@v1
      - run: kustomize version

      - name: Update Kubernetes image
        working-directory: ./frontend/k8s
        run: |
          kustomize edit set image frontend=${{ secrets.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}

      - name: Apply Kubernetes manifests to EKS cluster
        working-directory: ./frontend/k8s
        run: |
          aws eks --region us-east-1 update-kubeconfig --name cluster  
          kustomize build | kubectl apply -f -
